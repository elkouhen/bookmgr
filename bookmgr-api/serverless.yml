service: bookmgr-api

frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.8

plugins:
  - serverless-aws-documentation
  - serverless-openapi-documentation
  - serverless-apigateway-plugin
  - serverless-offline
  - serverless-python-requirements

functions:
  ping:
    handler: handler.ping
    iamRoleStatementsName: bookmgr-api-ping-${opt:stage, self:provider.stage}-role
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:scan
        Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/books"
    layers:
      - { Ref: PythonRequirementsLambdaLayer }
    events:
      - http:
          path: ping
          method: get
          documentation:
            summary: Ping
            description: Ping
            methodResponses:
              - statusCode: '200'
                responseBody:
                  description: "Ping Response"
                responseModels:
                  "application/json": "PingResponse"

custom:

  documentation:
    api:
      info:
        version: '1'
        title: 'Book API'
        description: 'Book API'

    models:
      - name: "PingResponse"
        description: "Ping Response"
        contentType: "application/json"
        schema:
          type: "object"
          properties:
            pong:
              type: "string"

  pythonRequirements: ${file(config.yml):pythonRequirements}
