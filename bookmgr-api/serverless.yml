service: bookmgr-api

frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.8

plugins:
  - serverless-aws-documentation
  - serverless-openapi-documentation
  - serverless-apigateway-plugin
  - serverless-plugin-tables
  - serverless-dynamodb-local
  - serverless-iam-roles-per-function
  - serverless-offline
  - serverless-python-requirements
functions:
  list_books:
    handler: handler.list_books
    iamRoleStatementsName: bookmgr-api-list-books-${opt:stage, self:provider.stage}-role #optional custom role name setting instead of the default generated one
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:scan
        Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/books"
    layers:
      - {Ref: PythonRequirementsLambdaLayer}
    events:
      - http:
          path: books
          method: get
          documentation:
            summary: List Books
            description: List Books
            methodResponses:
              - statusCode: '200'
                responseBody:
                  description: "Book Response"
                responseModels:
                  "application/json": "BookResponse"

resources:
  tables:
    books:
      partitionKey: author
      sortKey: title
      indexes:
        - name: AuthorByTitleIndex
          partitionKey: author
          sortKey: title

custom:
  openApiPath: openapi.yml

  documentation:
    api:
      info:
        version: '1'
        title: 'Book API'
        description: 'Book API'

    models:
      - name: "BookResponse"
        description: "Book Response"
        contentType: "application/json"
        schema:
          type: "array"
          items:
            type: "object"
            properties:
              title:
                type: "string"
              author:
                type: "string"

  tables:
    dynamo:
      # Dynamo options
      deploymentBatchSize: 5

  serverless-offline:
    httpPort: 4000

  dynamodb:
    # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true

    seed:
      domain:
        sources:
          - table: books
            sources: [ ./books.json ]

  pythonRequirements:
    layer: true
    noDeploy:
      - pytest
      - boto3